generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id         String    @id @default(cuid())
  user_id    String    // Placeholder user ID, not linked to a User model
  title      String
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  messages   Message[]

  @@map("chats")
}

model Message {
  id         String   @id @default(cuid())
  chat_id    String
  role       String
  content    String
  created_at DateTime @default(now()) @db.Timestamptz(6)
  chat       Chat     @relation(fields: [chat_id], references: [id], onDelete: Cascade)

  @@map("messages")
}

// Placeholder User model to satisfy Prisma's expectation if it was previously used
// This model is not actively used for authentication in the application logic.
model User {
  id         String    @id @default(cuid())
  email      String    @unique
  name       String
  password   String
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @updatedAt @db.Timestamptz(6)

  @@map("users")
}

// Placeholder VisitorCount model to satisfy Prisma's expectation if it was previously used
model VisitorCount {
  id    Int @id @default(autoincrement())
  count Int @default(0)

  @@map("VisitorCount")
}
